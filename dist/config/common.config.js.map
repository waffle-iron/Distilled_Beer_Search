{"version":3,"sources":["../../config/common.config.js"],"names":["path","require","webpack","HtmlWebpackPlugin","ExtractTextPlugin","extractCSS","ROOT","resolve","__dirname","root","pathParts","split","arr","concat","join","apply","context","module","exports","entry","polyfills","vendor","app","output","publicPath","filename","chunkFilename","extensions","loaders","test","loader","exclude","extract","include","plugins","optimize","CommonsChunkPlugin","name","template"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;AACA,IAAME,oBAAoBF,QAAQ,qBAAR,CAA1B;AACA,IAAMG,oBAAoBH,QAAQ,6BAAR,CAA1B;AACA,IAAMI,aAAa,IAAID,iBAAJ,CAAsB,YAAtB,CAAnB;;AAEA,IAAME,OAAON,KAAKO,OAAL,CAAaC,SAAb,EAAwB,IAAxB,CAAb;;AAEA,SAASC,IAAT,CAAcC,SAAd,EAAyB;AACvB,MAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACjCA,gBAAYA,UAAUC,KAAV,CAAgB,GAAhB,CAAZ;AACD;;AAED,MAAIC,MAAM,CAACN,IAAD,EAAOO,MAAP,CAAcH,SAAd,CAAV;AACA,SAAOV,KAAKc,IAAL,CAAUC,KAAV,CAAgBf,IAAhB,EAAsBY,GAAtB,CAAP;AACD;;AAED,IAAMI,UAAUP,KAAK,KAAL,CAAhB;;AAEAQ,OAAOC,OAAP,GAAiB;AACbF,kBADa;AAEbG,SAAO;AACHC,eAAW,gBADR;AAEHC,YAAQ,aAFL;AAGHC,SAAK;AAHF,GAFM;;AAQbC,UAAQ;AACJvB,UAAMS,KAAK,SAAL,CADF;AAEJe,gBAAY,GAFR;AAGJC,cAAU,kBAHN;AAIJC,mBAAe;AAJX,GARK;;AAebnB,WAAS;AACLoB,gBAAY,CAAC,EAAD,EAAK,KAAL,EAAY,KAAZ;AADP,GAfI;;AAmBbV,UAAQ;AACJW,aAAS,CACL;AACIC,YAAM,OADV;AAEID,eAAS,CAAC,8CAA8CnB,KAAK,mBAAL,CAA/C,EACP,0BADO;AAFb,KADK,EAML;AACIoB,YAAM,SADV;AAEIC,cAAQ;AAFZ,KANK,EAUL;AACID,YAAM,+CADV;AAEIC,cAAQ;AAFZ,KAVK,EAcL;AACID,YAAM,QADV;AAEIE,eAAStB,KAAK,KAAL,CAFb;AAGIqB,cAAQ1B,kBAAkB4B,OAAlB,CAA0B,OAA1B,EAAmC,eAAnC;AAHZ,KAdK,EAmBL;AACIH,YAAM,QADV;AAEII,eAASxB,KAAK,KAAL,CAFb;AAGIqB,cAAQ;AAHZ,KAnBK,EAwBL;AACID,YAAM,QADV;AAEII,eAASxB,KAAK,YAAL,CAFb;AAGIqB,cAAQzB,WAAW2B,OAAX,CAAmB,CAAC,KAAD,CAAnB;AAHZ,KAxBK;AADL,GAnBK;;AAoDbE,WAAS,CACL,IAAIhC,QAAQiC,QAAR,CAAiBC,kBAArB,CAAwC;AACpCC,UAAM,CAAC,KAAD,EAAQ,QAAR,EAAkB,WAAlB;AAD8B,GAAxC,CADK,EAKL,IAAIlC,iBAAJ,CAAsB;AAClBmC,cAAU;AADQ,GAAtB,CALK,EASLjC,UATK;AApDI,CAAjB","file":"common.config.js","sourcesContent":["const path = require('path');\nconst webpack = require('webpack');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\nconst extractCSS = new ExtractTextPlugin('[name].css');\n\nconst ROOT = path.resolve(__dirname, '..');\n\nfunction root(pathParts) {\n  if (typeof pathParts === 'string') {\n    pathParts = pathParts.split('/');\n  }\n\n  let arr = [ROOT].concat(pathParts);\n  return path.join.apply(path, arr);\n}\n\nconst context = root('src');\n\nmodule.exports = {\n    context,\n    entry: {\n        polyfills: './polyfills.ts',\n        vendor: './vendor.ts',\n        app: './main.ts',\n      },\n\n    output: {\n        path: root('wwwroot'),\n        publicPath: '/',\n        filename: '[name].[hash].js',\n        chunkFilename: '[id].[hash].chunk.js',\n      },\n\n    resolve: {\n        extensions: ['', '.ts', '.js'],\n      },\n\n    module: {\n        loaders: [\n            {\n                test: /\\.ts$/,\n                loaders: ['awesome-typescript-loader?configFileName=' + root('src/tsconfig.json'),\n                  'angular2-template-loader',],\n              },\n            {\n                test: /\\.html$/,\n                loader: 'html',\n              },\n            {\n                test: /\\.(png|jpe?g|gif|svg|woff|woff2|ttf|eot|ico)$/,\n                loader: 'file?name=/assets/[name].[hash].[ext]',\n              },\n            {\n                test: /\\.css$/,\n                exclude: root('src'),\n                loader: ExtractTextPlugin.extract('style', 'css?sourceMap'),\n              },\n            {\n                test: /\\.css$/,\n                include: root('src'),\n                loader: 'raw',\n              },\n            {\n                test: /\\.css$/,\n                include: root('src/styles'),\n                loader: extractCSS.extract(['css']),\n              },\n        ],\n      },\n\n    plugins: [\n        new webpack.optimize.CommonsChunkPlugin({\n            name: ['app', 'vendor', 'polyfills'],\n          }),\n\n        new HtmlWebpackPlugin({\n            template: 'index.html',\n          }),\n\n        extractCSS,\n    ],\n  };\n"]}